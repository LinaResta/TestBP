{
  "$type": "Comindware.Platform.Contracts.UserCommandConfigurationModel, Comindware.Platform.Contracts",
  "GlobalAlias": {
    "$type": "Comindware.Platform.Contracts.GlobalAlias, Comindware.Platform.Contracts",
    "Type": "UserCommand",
    "Owner": "Project",
    "Alias": "SendChangeRequest"
  },
  "Name": "Создать/Присвоить ЗИ",
  "IsSystem": false,
  "IsDisabled": false,
  "IsPrepare": false,
  "SkipValidation": false,
  "Context": "Record",
  "Multiplicity": "OneByOne",
  "Kind": "Script",
  "ResultType": "DataChange",
  "ScriptRule": {
    "$type": "Comindware.Platform.Contracts.UserCommandScriptRuleModel, Comindware.Platform.Contracts",
    "Type": "UserCommandScript",
    "Definition": {
      "$type": "Comindware.Platform.Contracts.CSharpRuleDefinitionModel, Comindware.Platform.Contracts",
      "EntryPoint": "Script",
      "Code": "// 2 ПРОЕКТ Создать Присвоить ЗИ\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing Comindware.Data.Entity;\r\nusing Comindware.TeamNetwork.Api.Data.UserCommands;\r\nusing Newtonsoft.Json;\r\nusing System.Net;\r\nusing System.IO;\r\nusing System.Text;\r\nusing System.Diagnostics;\r\nusing RestSharp;\r\nusing RestSharp.Authenticators;\r\n\r\npublic class Script {\r\n    public class ChangeRequest {\r\n        public string Projector { get; set; }               // Проектировщик\r\n        public string ProjectLead { get; set; }             // Руководитель гр. проектирования  \r\n        public string ChangeManager { get; set; }           // Менеджер изменений\r\n        public string Requester { get; set; }               // Автор запроса\r\n        public string Description { get; set; }             // Краткое описание Проект CBAP + код проекта\r\n        public string Text { get; set; }                    // Наименование проекта\r\n        public string SmGuid { get; set; }                  // Guid ЗИ в SAP\r\n        public string SmId { get; set; }                    // ID ЗИ в SAP\r\n        public string WebReference { get; set; }            // Вэб-ссылка на проект в CBAP         \r\n        public string CbapProjectReference { get; set; }    // Внутренний ID проекта в CBAP\r\n        public string ProjectCode { get; set; }             // Код проекта\r\n        public string Category { get; set; }                // Категория       \r\n        public string DeliveryDate { get; set; }            // Дата реализации\r\n        public string ItTeam { get; set; }                  // ИТ служба\r\n    }\r\n\r\n    public class ChangeRequestResult : ChangeRequest {\r\n        public string ErrorText { get; set; }\r\n        public string ErrorCode { get; set; }\r\n    }\r\n\r\n    public class RequestResultRaw {\r\n        [JsonProperty(\"d\")]\r\n        public ChangeRequestResult ChangeRequestResult { get; set; }\r\n\r\n        [JsonProperty(\"error\")]\r\n        public ErrorResult Error { get; set; }\r\n    }\r\n\r\n    public class ErrorResult {\r\n        [JsonProperty(\"message\")]\r\n        public Message Message { get; set; }\r\n    }\r\n\r\n    public class Message {\r\n        [JsonProperty(\"value\")]\r\n        public string Value { get; set; }\r\n    }\r\n\r\n    public static string GetObjectValue(string sapObjectId, string propertyAlias) {\r\n        var sapData = Api.TeamNetwork.ObjectService.GetPropertyValues(new[] {sapObjectId}, new string[] {propertyAlias});\r\n        return (string) sapData[sapObjectId][propertyAlias];\r\n    }\r\n\r\n    public static UserCommandResult ShowMessageToUser(string m) {\r\n        if (m == null) {\r\n            m = \"\";\r\n        }\r\n        return new UserCommandResult {\r\n            Success = false,\r\n            Commited = false,\r\n            ResultType = UserCommandResultType.DataChange,\r\n            Messages = new[] {\r\n                new UserCommandMessage {\r\n                    Severity = SeverityLevel.Normal,\r\n                    Text = m\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    [System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions]\r\n    public static UserCommandResult Main(UserCommandContext userCommandContext, Comindware.Entities entities) {\r\n        var alias = \"Project\";\r\n        // Получаем id текущего проекта|плана\r\n        var mainId = userCommandContext.ObjectIds.FirstOrDefault();\r\n        var serverAddress = Api.Base.GlobalConfigurationService.ServerAddress;\r\n        var objectApp = Api.TeamNetwork.ObjectAppService.GetByAlias(alias);\r\n        var webReference = serverAddress + \"/#form/\" + objectApp.Id + \"/default/\" + mainId;\r\n\r\n        // Получаем dictionary с данными о текущем проекте\r\n        var projectData = Api.TeamNetwork.ObjectService.GetWithAlias(alias, mainId);\r\n        \r\n        object projectCodeObj;\r\n        projectData.TryGetValue(\"Code\", out projectCodeObj);\r\n        string projectCode = projectCodeObj as string;\r\n        \r\n        // проставим описание изменения в Charm\r\n        \r\n        object nameObj;\r\n        projectData.TryGetValue(\"Name\", out nameObj);\r\n        string nameDescription = nameObj as string;\r\n\r\n        var category = \"Проектирование\";\r\n\r\n        object plannedDateObj;\r\n        projectData.TryGetValue(\"PlannedEndDate\", out plannedDateObj);\r\n        string deliveryDateStr = null;\r\n        if (plannedDateObj != null) {\r\n            DateTime plannedDate = (DateTime) plannedDateObj;\r\n            // из-за смещения часовых поясов добавим 5 часов\r\n            plannedDate = plannedDate.AddHours(5);\r\n            deliveryDateStr = plannedDate.ToShortDateString();\r\n        }\r\n        \r\n        var sapLoginAlias = \"SAP_LOGIN\";\r\n        object sapRepresentativeObjId;\r\n        string representativeSapLogin = null;\r\n        projectData.TryGetValue(\"SapRepresentative\", out sapRepresentativeObjId);\r\n      \r\n        if (sapRepresentativeObjId != null) {\r\n            var sapRepresentativeStrId = sapRepresentativeObjId as string;\r\n            representativeSapLogin = GetObjectValue(sapRepresentativeStrId, sapLoginAlias);\r\n        }\r\n\r\n        object sapManagerObjId;\r\n        string sapMangerLogin = null;\r\n        projectData.TryGetValue(\"SapManager\", out sapManagerObjId);\r\n \r\n\r\n\r\n        if (sapManagerObjId != null) {\r\n            var SapManager = entities.Project.Where(x => x.id == mainId).Select(x => new { x.SapManager }).FirstOrDefault().SapManager;\r\n            sapMangerLogin = GetObjectValue(SapManager, sapLoginAlias);\r\n        }\r\n\r\n        object itServiceObjId;\r\n        string itServiceName = null;\r\n        projectData.TryGetValue(\"ITService\", out itServiceObjId);\r\n        if (itServiceObjId != null) {\r\n            var itServiceObjIdStr = itServiceObjId as string;\r\n            var namePropertyAlias = \"Name\";\r\n            itServiceName = GetObjectValue(itServiceObjIdStr, namePropertyAlias);\r\n        }\r\n\r\n        object currentSmIdObj;\r\n        decimal currentDecimalSmId = 0;\r\n        if (projectData.TryGetValue(\"ChangeRequest\", out currentSmIdObj)) {\r\n           currentDecimalSmId = (decimal) currentSmIdObj;\r\n        }\r\n\r\n        if (currentSmIdObj == null && (itServiceObjId == null || sapRepresentativeObjId == null)) {\r\n            return ShowMessageToUser(\"Для создания ЗИ введите представителя заказчика и ИТ-службу!\");\r\n        }\r\n       \r\n        var hasCurrentSmId = currentDecimalSmId != 0;\r\n        var changeRequest = new ChangeRequest {\r\n            CbapProjectReference = mainId,\r\n            Category = category,\r\n            Requester = representativeSapLogin,\r\n            ProjectCode = projectCode,\r\n            Description = \"Проект CBAP \" + projectCode,\r\n            Text = nameDescription,\r\n            DeliveryDate = deliveryDateStr,\r\n            WebReference = webReference,\r\n            ChangeManager = sapMangerLogin,\r\n            ProjectLead = sapMangerLogin,\r\n            Projector = sapMangerLogin,\r\n            ItTeam = itServiceName,\r\n            // Добавление 0 - грязный хак, в SAP номер начинается с 0...\r\n            SmId = hasCurrentSmId ? \"0\" + currentDecimalSmId.ToString() : null\r\n        };\r\n\r\n        // считаем все значения настроек\r\n        var settingsId = entities.CustomSettings.Where(x => x.name == \"SolmanCharm\").Select(x => new { x.id }).FirstOrDefault();\r\n        var settings = entities.CustomSettingsValues.Where(x => x.customSettings == settingsId.id).Select(x => new { x.parameter, x.value }).ToList();\r\n\r\n        // прочитаем значение логина и пароля пользователя\r\n        var userLogin = settings.Where(x => x.parameter == \"userLogin\").Select(x => x.value).FirstOrDefault();\r\n        var userPassword = settings.Where(x => x.parameter == \"userPassword\").Select(x => x.value).FirstOrDefault();\r\n\r\n        // прочитаем систему, с которой будем интегрироваться\r\n        var currentSystem = settings.Where(x => x.parameter == \"currentSystem\").Select(x => x.value).FirstOrDefault();\r\n        var systemAddr = settings.Where(x => x.parameter == currentSystem).Select(x => x.value).FirstOrDefault();\r\n\r\n        // сформируем адрес сервиса\r\n        var url = systemAddr + \"/sap/opu/odata/sap/ZGP_ODATA_CHARM_SRV\";\r\n        var changeRequestUrl = systemAddr + \"/sap/crm_logon?sap-client=300&CRM-OBJECT-TYPE=AIC_OB_CMCR&CRM-OBJECT-ACTION=B&CRM-OBJECT-VALUE=\";\r\n\r\n        var jsonData = JsonConvert.SerializeObject(changeRequest, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore });\r\n        var client = new RestClient(url) {\r\n            Authenticator = new HttpBasicAuthenticator(userLogin, userPassword)\r\n        };\r\n        ChangeRequestResult changeRequestResult = null;\r\n        var request = new RestSharp.RestRequest(\"/RequestForChangeSet\", Method.POST);\r\n        request.JsonSerializer.ContentType = \"application/json; charset=utf-8\";\r\n        request.AddParameter(\"application/json\", jsonData , ParameterType.RequestBody);\r\n        request.AddHeader(\"X-Requested-With\", \"X\");\r\n        var response = client.Execute(request); \r\n\r\n        RequestResultRaw requestResultRaw = null;\r\n        requestResultRaw = JsonConvert.DeserializeObject<RequestResultRaw>(response.Content);\r\n        var success = (int)response.StatusCode < 400;\r\n        string errorText = \"\";\r\n\r\n        if (success) {\r\n            try {\r\n                changeRequestResult = requestResultRaw.ChangeRequestResult;\r\n                errorText = changeRequestResult.ErrorText;\r\n                var errorCode = changeRequestResult.ErrorCode;\r\n              \r\n                var changeRequestCreationData = new Dictionary<string, object>() {\r\n                    { alias,  mainId},\r\n                    { \"documentNumber\",  changeRequestResult.SmId },\r\n                    { \"GUID\",  changeRequestResult.SmGuid },\r\n                    { \"httpLink\",  string.Format(\"<a target=\\\"_blank\\\" href=\\\"{0}{1}\\\">{2}\", changeRequestUrl, changeRequestResult.SmGuid,  changeRequestResult.SmId)}\r\n                };\r\n                Api.TeamNetwork.ObjectService.CreateWithAlias(\"ChangeRequest\", changeRequestCreationData);\r\n            }\r\n            catch(Exception ex) {\r\n                success = false;\r\n                errorText = ex.Message;\r\n            }\r\n        } else {\r\n            success = false;\r\n            var error = requestResultRaw.Error;\r\n            if (requestResultRaw.Error != null && requestResultRaw.Error.Message != null) {\r\n                errorText = requestResultRaw.Error.Message.Value;\r\n            } else {\r\n                errorText = \"Ошибка, обратитесь к системному администратору\";\r\n            }\r\n        }\r\n\r\n        var result = new UserCommandResult {\r\n            Success = success,\r\n            Commited = success,\r\n            ResultType = UserCommandResultType.DataChange,\r\n            Messages = new[] {\r\n                new UserCommandMessage {\r\n                    Severity = success ? SeverityLevel.Normal : SeverityLevel.Critical,\r\n                    Text = success ? \"Создана ЗИ с номером: \" + changeRequestResult.SmId : errorText\r\n                }\r\n            }\r\n        };\r\n        return result;\r\n    }\r\n}\r\n",
      "Type": "CSharpExpression"
    }
  },
  "RelatedEntityGlobalAlias": {
    "$type": "Comindware.Platform.Contracts.GlobalAlias, Comindware.Platform.Contracts",
    "Type": "Undefined"
  },
  "LockStateChangeType": "Undefined",
  "LockStateVisibilityType": "Undefined"
}