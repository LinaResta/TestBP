{
  "$type": "Comindware.Platform.Contracts.AttributeModel, Comindware.Platform.Contracts",
  "GlobalAlias": {
    "$type": "Comindware.Platform.Contracts.GlobalAlias, Comindware.Platform.Contracts",
    "Type": "Attribute",
    "Owner": "Workitem",
    "Alias": "parentProject"
  },
  "Type": "Instance",
  "Format": "Link",
  "Name": "Проект",
  "IsSystem": false,
  "IsDisabled": false,
  "IsUnique": false,
  "IsIndexed": false,
  "IsTracked": false,
  "IsDigitGrouping": false,
  "IsMultiValue": false,
  "IsTitle": false,
  "IsMandatory": false,
  "IsOwnership": false,
  "IsCalculated": true,
  "Expression": "@prefix cmw: <http://comindware.com/logics#>.\r\n@prefix object: <http://comindware.com/ontology/object#>.\r\n\r\n{\r\n  (\"Workitem\" \"ParentWorkitem\") object:findProperty ?parentProperty.\r\n  \r\n  (\"Workitem\" \"DesigningPhase\" )object:findProperty ?designingPhaseProperty.\r\n  (\"Workitem\" \"TestProductionPhase\" )object:findProperty ?testProductionPhaseProperty.\r\n  (\"Workitem\" \"RealizationPhase\" )object:findProperty ?realizationPhaseProperty.\r\n\r\n  (\"DesigningPhase\" \"Project\" )object:findProperty ?projectPropertyInDesigning.\r\n  (\"TestProductionPhase\" \"Project\") object:findProperty ?projectPropertyInTestProduction.\r\n  (\"RealizationPhase\" \"Project\") object:findProperty ?projectPropertyInRealization.\r\n\r\n  (?item ?parentProperty) object:getRootByParentProperty ?rootTask.\r\n  or\r\n  {\r\n    ?rootTask ?designingPhaseProperty ?phase.\r\n    ?phase ?projectPropertyInDesigning ?project.\r\n  }\r\n  or\r\n  {\r\n    ?rootTask ?testProductionPhaseProperty ?phase.\r\n    ?phase ?projectPropertyInTestProduction ?project.\r\n  }\r\n  or\r\n  {\r\n    ?rootTask ?realizationPhaseProperty ?phase.\r\n    ?phase ?projectPropertyInRealization ?project.\r\n  }.\r\n  ?project -> ?value.\r\n}",
  "InstanceGlobalAlias": {
    "$type": "Comindware.Platform.Contracts.GlobalAlias, Comindware.Platform.Contracts",
    "Type": "RecordTemplate",
    "Alias": "Project"
  }
}